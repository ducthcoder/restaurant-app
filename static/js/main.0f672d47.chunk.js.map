{"version":3,"sources":["logo.svg","hooks/useForm.js","utils/index.js","components/Order/OrderedFoodItem.js","layouts/Form.js","controls/Button.js","controls/Input.js","controls/Select.js","api/index.js","layouts/Popup.js","layouts/Table.js","components/Order/OrderList.js","layouts/Notification.js","components/Order/OrderForm.js","components/Order/SearchFoodItems.js","components/Order/index.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","getFreshModelObject","useState","values","setValues","errors","setErrors","handleInputChange","e","target","name","value","resetFormControls","roundTo2DecimalPoint","Math","round","Number","EPSILON","useStyles","makeStyles","them","paperRoot","margin","cursor","display","buttonGroup","backgroundColor","borderRadius","border","minWidth","padding","fontSize","color","deleteButton","totalPerItem","fontWeight","OrderedFoodItem","props","classes","orderedFoodItems","orderDetails","updateQuantity","idx","x","foodItem","quantityItem","List","length","ListItem","ListItemText","primary","primaryTypographyProps","style","textAlign","fontStyle","map","item","Paper","className","foodItemName","component","secondary","ButtonGroup","size","onClick","disabled","foodItemPrice","secondaryTypographyProps","ListItemSecondaryAction","IconButton","index","id","filter","_","i","deletedOrderItemIds","removeFoodItem","orderDetailId","disableRipple","theme","root","width","spacing","Form","children","other","noValidate","autoComplete","textTransform","Button","variant","Input","label","onChange","error","TextField","helperText","Select","options","FormControl","InputLabel","MenuItem","title","FormHelperText","ENDPOINTS","createAPIEndpoint","endpoint","url","fetchAll","axios","get","fetchById","create","newRecord","post","update","updateRecord","put","delete","dialogWrapper","position","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","Typography","flexGrow","DialogContent","dividers","table","Table","OrderList","setOrderId","setOrderListVisibility","setNotify","orderList","setOrderList","useEffect","then","res","data","catch","err","console","log","TableHead","TableRow","TableCell","TableBody","orderNumber","customer","customerName","pMethod","gTotal","orderId","window","confirm","isOpen","message","Notification","notify","handleClose","event","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","adornmentText","submitButtonGroup","OrderForm","orderListVisibility","customerList","setCustomerList","customerId","concat","reduce","tempTotal","JSON","stringify","onSubmit","preventDefault","temp","Object","every","validateForm","Grid","container","xs","InputProps","startAdornment","InputAdornment","endIcon","type","startIcon","searchPaper","alignItems","searchInput","marginLeft","flex","listRoot","marginTop","maxHeight","overflow","SearchFoodItems","searchList","setSearchList","searchKey","setSearchKey","foodItems","setFoodItems","y","toLowerCase","includes","toLocaleLowerCase","foodItemId","addFoodItem","InputBase","placeholder","Order","floor","random","toString","App","Container","gutterBottom","align","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f672d47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\n\r\nconst useForm = (getFreshModelObject) => {\r\n\r\n    const [values, setValues] = useState(getFreshModelObject);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const resetFormControls = () => {\r\n        setValues(getFreshModelObject);\r\n        setErrors({});\r\n    }\r\n    \r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetFormControls\r\n    };\r\n};\r\n\r\nexport default useForm;","export const roundTo2DecimalPoint = value => Math.round((value + Number.EPSILON) * 100) / 100;","import React from 'react';\r\nimport { Button, ButtonGroup, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Paper, makeStyles } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { roundTo2DecimalPoint } from '../../utils';\r\n\r\nconst useStyles = makeStyles(them =>({\r\n    paperRoot: {\r\n        margin: '15px 0px',\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        },\r\n        '&:hover $deleteButton':{\r\n            display: 'block'\r\n        }\r\n    },\r\n    buttonGroup: {\r\n        backgroundColor: '#e3e3e3',\r\n        borderRadius: 8,\r\n        '& .MuiButtonBase-root':{\r\n            border: 'none',\r\n            minWidth: '25px',\r\n            padding: '1px'\r\n        },\r\n        '& button:nth-child(2)': {\r\n            fontSize: '1.2rem',\r\n            color: '#000'\r\n        }\r\n    },\r\n    deleteButton: {\r\n        display: 'none',\r\n        '& .MuiButtonBase-root':{\r\n            color: '#e81719'\r\n        },\r\n    },\r\n    totalPerItem: {\r\n        fontWeight: 'bolder',\r\n        fontSize: '1.2em',\r\n        margin: '0px 10px'\r\n    }\r\n}));\r\n\r\nconst OrderedFoodItem = (props) => {\r\n\r\n    const { values, setValues } = props;\r\n    const classes = useStyles();\r\n\r\n    let orderedFoodItems = values.orderDetails;\r\n\r\n    const removeFoodItem = (index, id) => {\r\n        let x = {...values};\r\n        x.orderDetails = x.orderDetails.filter((_, i) => i != index);\r\n        if(id != 0){\r\n            x.deletedOrderItemIds += id + ',';\r\n        }\r\n        setValues({...x});\r\n    }\r\n\r\n    const updateQuantity = (idx, value) => {\r\n        let x = { ...values };\r\n        let foodItem = x.orderDetails[idx];\r\n        if(foodItem.quantityItem + value > 0){\r\n            foodItem.quantityItem += value; \r\n            setValues({...x});\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <List>\r\n            {\r\n                orderedFoodItems.length == 0 ? \r\n                <ListItem>\r\n                    <ListItemText\r\n                    primary = \"Please select food items\" \r\n                    primaryTypographyProps={{\r\n                        style: {\r\n                            textAlign: 'center',\r\n                            fontStyle: 'italic'\r\n                        }\r\n                    }}/>\r\n                </ListItem>\r\n                : orderedFoodItems.map((item, idx) => (\r\n                    <Paper key={idx} className={classes.paperRoot}>\r\n                        <ListItem>\r\n                            <ListItemText\r\n                                primary={item.foodItemName}\r\n                                primaryTypographyProps={{\r\n                                    component: 'h1',\r\n                                    style: {\r\n                                        fontWeight: '500',\r\n                                        fontSize: '1.2rem'\r\n                                    }\r\n                                }}\r\n                                secondary={\r\n                                    <>\r\n                                    <ButtonGroup size=\"small\" className={classes.buttonGroup}>\r\n                                        <Button\r\n                                        onClick={e => updateQuantity(idx, -1)}>-</Button>\r\n                                        <Button disabled>{item.quantityItem}</Button>\r\n                                        <Button\r\n                                        onClick={e => updateQuantity(idx, 1)}>+</Button>\r\n                                    </ButtonGroup>\r\n                                    <span className={classes.totalPerItem}>\r\n                                        { roundTo2DecimalPoint(item.foodItemPrice * item.quantityItem) +' VND' }\r\n                                    </span>\r\n                                    </>\r\n                                }\r\n                                secondaryTypographyProps={{\r\n                                    component: 'div'\r\n                                }}\r\n                            />\r\n                            <ListItemSecondaryAction className={classes.deleteButton}>\r\n                                <IconButton \r\n                                onClick={ e => removeFoodItem(idx, item.orderDetailId) }\r\n                                disableRipple>\r\n                                    <DeleteOutlineIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    </Paper>\r\n                ))\r\n            }\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default OrderedFoodItem;","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width: '90%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Form(props){\r\n    const classes = useStyles();\r\n    const { children, ...other } = props;\r\n\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\" {...other}>\r\n            {children}\r\n        </form>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport { Button as MuiButton, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        '& .MuiButton-label': {\r\n            textTransform: 'none',\r\n        }\r\n    }\r\n}));\r\n\r\nconst Button = (props) => {\r\n    const { children, color, variant, onClick, className, ...other } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <MuiButton\r\n            className={classes.root + ' ' + (className || '')}\r\n            variant={variant || \"contained\" }\r\n            color={color || \"default\"}\r\n            onClick={onClick}\r\n            {...other}\r\n        >\r\n            {children}\r\n        </MuiButton>\r\n    );\r\n};\r\n\r\nexport default Button;","import { TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Input = (props) => {\r\n    const { name, label, value, variant, onChange, error = null, ...other } = props;\r\n\r\n    return (\r\n        <TextField\r\n            variant={variant || \"outlined\"}\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...other}\r\n            {...(error && {error: true, helperText: error})}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;","import { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst Select = (props) => {\r\n    const { name, label, value, variant, onChange, options, error = null } = props;\r\n\r\n    return (\r\n        <FormControl\r\n            variant={variant || \"outlined\"}\r\n            {...(error && {error: true})}>\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n                label={label}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}>\r\n                {\r\n                    options.map(\r\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                    )\r\n                }\r\n            </MuiSelect>\r\n            {error && <FormHelperText>{error}</FormHelperText>}\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default Select;","import axios from \"axios\";\r\n\r\nconst BASE_URL = 'http://restaurantapi.somee.com/api/';\r\n\r\nexport const ENDPOINTS = {\r\n    CUSTOMER: 'Customer',\r\n    FOODITEM: 'FoodItem',\r\n    ORDER: 'Order'\r\n}\r\n\r\nexport const createAPIEndpoint = endpoint => {\r\n\r\n    let url = BASE_URL + endpoint + '/';\r\n\r\n    return {\r\n        fetchAll: () => axios.get(url),\r\n        fetchById: id => axios.get(url + id),\r\n        create: newRecord => axios.post(url, newRecord),\r\n        update: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n        delete: id => axios.delete(url + id)\r\n    }\r\n}","import { Dialog, DialogContent, DialogTitle, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}));\r\n\r\nconst Popup = (props) => {\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper}}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{flexGrow: 1}}>\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton\r\n                    onClick={() => {setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default Popup;","import { Table as MuiTable, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        '& tbody td': {\r\n            fontWeight: '300',\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: '#fffbf2',\r\n            cursor: 'pointer'\r\n        },\r\n        '& .MuiTableCell-root': {\r\n            border: 'none'\r\n        }\r\n    }\r\n}));\r\n\r\nconst Table = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MuiTable className={classes.table}>\r\n            {props.children}\r\n        </MuiTable>\r\n    );\r\n};\r\n\r\nexport default Table;","import { Button, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { createAPIEndpoint, ENDPOINTS } from '../../api';\r\nimport Table from '../../layouts/Table';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\n\r\nconst OrderList = (props) => {\r\n\r\n    const { setOrderId, setOrderListVisibility, resetFormControls, setNotify } = props;\r\n\r\n    const [orderList, setOrderList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        createAPIEndpoint(ENDPOINTS.ORDER).fetchAll()\r\n        .then(res => {\r\n            setOrderList(res.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const showForUpdate = id => {\r\n        setOrderId(id);\r\n        setOrderListVisibility(false);\r\n    }\r\n\r\n    const deleteOrder = id => {\r\n        if(window.confirm('Are you sure to delete this record ?')){\r\n            createAPIEndpoint(ENDPOINTS.ORDER).delete(id)\r\n            .then(res => {\r\n                setOrderListVisibility(false);\r\n                setOrderId(0);\r\n                resetFormControls();\r\n                setNotify({ isOpen: true, message: 'Delete order successfully.' });\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Order Number</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell>Pay Method</TableCell>\r\n                    <TableCell>Grand Total</TableCell>\r\n                    <TableCell></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {\r\n                    orderList.map(item => (\r\n                        <TableRow key={item.orderId}>\r\n                            <TableCell>\r\n                                {item.orderNumber}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {item.customer.customerName}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {item.pMethod}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                {item.gTotal}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <Button onClick={e => showForUpdate(item.orderId)}>\r\n                                    <DehazeIcon \r\n                                    color=\"primary\" />\r\n                                </Button>\r\n                                <Button onClick={e => deleteOrder(item.orderId)}> \r\n                                    <DeleteOutlineIcon \r\n                                    color=\"secondary\" />\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))\r\n                }\r\n            </TableBody>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default OrderList;","import { makeStyles, Snackbar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        top: theme.spacing(9),\r\n        '& .MuiAlert-root': {\r\n            backgroundColor: '#f3b33d',\r\n            color: '#000'\r\n        },\r\n        '& .MuiAlert-icon': {\r\n            color: '#000'\r\n        }\r\n    }\r\n}));\r\n\r\nconst Notification = (props) => {\r\n\r\n    const { notify, setNotify } = props;\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            autoHideDuration={3000}\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            onClose={handleClose}>\r\n            <Alert\r\n                onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport Form from '../../layouts/Form';\r\nimport { Input, Select, Button } from '../../controls';\r\nimport { ButtonGroup, Grid, InputAdornment, makeStyles, Button as MuiButton } from '@material-ui/core';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport RestaurantMenu from '@material-ui/icons/RestaurantMenu';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\nimport { createAPIEndpoint, ENDPOINTS } from '../../api';\r\nimport { roundTo2DecimalPoint } from '../../utils';\r\nimport Popup from '../../layouts/Popup';\r\nimport OrderList from './OrderList';\r\nimport Notification from \"../../layouts/Notification\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    adornmentText: {\r\n        '& .MuiTypography-root': {\r\n            color: '#f3b33d',\r\n            fontWeight: 'bolder',\r\n            fontSize: '1.5rem'\r\n        }\r\n    },\r\n    submitButtonGroup: {\r\n        backgroundColor: '#f3b33d',\r\n        color: '#000',\r\n        margin: theme.spacing(1),\r\n        '& .MuiButton-label': {\r\n            textTransform: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: '#f3b33d'\r\n        }\r\n    }\r\n}));\r\n\r\nconst OrderForm = (props) => {\r\n\r\n    const { values, setValues, errors, setErrors, handleInputChange, resetFormControls } = props;\r\n    const classes = useStyles();\r\n\r\n    const [orderListVisibility, setOrderListVisibility] = useState(false);\r\n    const [orderId, setOrderId] = useState(0); // orderId id*\r\n\r\n    const [notify, setNotify] = useState({ isOpen: false });\r\n\r\n    // list customer item\r\n    const [customerList, setCustomerList] = useState([]);\r\n    useEffect(() => {\r\n        createAPIEndpoint(ENDPOINTS.CUSTOMER).fetchAll()\r\n        .then(res => {\r\n            let customerList = res.data.map(item => ({\r\n                id: item.customerId,\r\n                title: item.customerName\r\n            }));\r\n            customerList = [{id:0, title:'Select'}].concat(customerList);\r\n            setCustomerList(customerList);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    // Total order\r\n    useEffect(() => {\r\n        let gTotal = values.orderDetails.reduce((tempTotal, item) => {\r\n            return tempTotal + (item.quantityItem * item.foodItemPrice);\r\n        }, 0);\r\n\r\n        setValues({\r\n            ...values,\r\n            gTotal: roundTo2DecimalPoint(gTotal)\r\n        });\r\n\r\n    }, [JSON.stringify(values.orderDetails)]);\r\n\r\n    // load order id\r\n    useEffect(() => {\r\n        if(orderId == 0) resetFormControls();\r\n        else {\r\n            createAPIEndpoint(ENDPOINTS.ORDER).fetchById(orderId)\r\n            .then(res => {\r\n                setValues(res.data);\r\n                setErrors({});\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }, [orderId]);\r\n\r\n    const validateForm = () =>{\r\n        let temp = {};\r\n        temp.customerId = values.customerId != 0 ? \"\" : \"This field is required.\";\r\n        temp.pMethod = values.pMethod != \"none\" ? \"\" : \"This field is required.\";\r\n        temp.orderDetails = values.orderDetails.length != 0 ? \"\" : \"This field is required.\";\r\n        setErrors({...temp});\r\n        return Object.values(temp).every(x => x===\"\");\r\n    }\r\n    // add & update order\r\n    const submitOrder = e => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            if(values.orderId == 0){\r\n                createAPIEndpoint(ENDPOINTS.ORDER).create(values)\r\n                    .then(res => {\r\n                        resetFormControls();\r\n                        setNotify({isOpen: true, message: 'New order is created.'});\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }\r\n            else{\r\n                createAPIEndpoint(ENDPOINTS.ORDER).update(values.orderId, values)\r\n                    .then(res => {\r\n                        setOrderId(0);\r\n                        setNotify({isOpen: true, message: 'The order is updated.'});\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }\r\n        }\r\n    }\r\n\r\n    // List of Orders\r\n    const openListOfOrders = () => {\r\n        setOrderListVisibility(true);\r\n    }\r\n\r\n    const resetForm = () => {\r\n        resetFormControls();\r\n        setOrderId(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Form onSubmit={submitOrder}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Input \r\n                        disabled \r\n                        label=\"Order Number\" \r\n                        name=\"orderNumber\"\r\n                        value={values.orderNumber}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment\r\n                                className={classes.adornmentText}\r\n                                position=\"start\">#</InputAdornment>\r\n                        }}\r\n                    />\r\n                    <Select\r\n                        label=\"Customer\"\r\n                        name=\"customerId\"\r\n                        value={values.customerId}\r\n                        onChange={handleInputChange}\r\n                        options= {customerList}\r\n                        error={errors.customerId}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Select\r\n                        label=\"Payment Method\"\r\n                        name=\"pMethod\"\r\n                        value={values.pMethod}\r\n                        onChange={handleInputChange}\r\n                        options= {[\r\n                            {id:'none', title:'Select'},\r\n                            {id:'Cash', title:'Cash'},\r\n                            {id:'Card', title:'Card'},\r\n                        ]}\r\n                        error={errors.pMethod}\r\n                    />\r\n                    <Input \r\n                        disabled \r\n                        label=\"Grand Total\" \r\n                        name=\"gTotal\"\r\n                        value={values.gTotal}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment\r\n                                className={classes.adornmentText}\r\n                                position=\"start\">VND</InputAdornment>\r\n                        }}\r\n                    />\r\n                    <ButtonGroup className={classes.submitButtonGroup} >\r\n                        <MuiButton\r\n                            size=\"large\"\r\n                            endIcon={<RestaurantMenu/>}\r\n                            type=\"submit\">Submit\r\n                        </MuiButton>\r\n                        <MuiButton\r\n                            size=\"small\"\r\n                            onClick={resetForm}\r\n                            startIcon={<ReplayIcon/>}>\r\n                        </MuiButton>\r\n                    </ButtonGroup>\r\n                    <Button\r\n                        size=\"large\"\r\n                        onClick={openListOfOrders}\r\n                        startIcon={<ReorderIcon/>}\r\n                    >Orders</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n        <Popup\r\n        title=\"List of Orders\"\r\n        openPopup={orderListVisibility}\r\n        setOpenPopup={setOrderListVisibility}>\r\n            <OrderList \r\n            { ...{ setOrderId, setOrderListVisibility, resetFormControls, setNotify } }/>\r\n        </Popup>\r\n        <Notification\r\n            {...{ notify, setNotify }} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderForm;","import { List, ListItem, ListItemText, Paper, InputBase, IconButton, makeStyles, ListItemSecondaryAction } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { createAPIEndpoint, ENDPOINTS } from '../../api';\r\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone';\r\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    searchPaper: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    searchInput: {\r\n        marginLeft: theme.spacing(1.5),\r\n        flex: 1,\r\n    },\r\n    listRoot: {\r\n        marginTop: theme.spacing(1),\r\n        maxHeight: 450,\r\n        overflow: 'auto',\r\n        '& li:hover': {\r\n            cursor: 'pointer',\r\n            backgroundColor: '#e3e3e3'\r\n        },\r\n        '& li:hover .MuiButtonBase-root': {\r\n            display: 'block',\r\n            color: '#000'\r\n        },\r\n        '& .MuiButtonBase-root': {\r\n            display: 'none'\r\n        },\r\n        '& .MuiButtonBase-root:hover': {\r\n            backgroundColor: 'transparent'\r\n        }\r\n    }\r\n}));\r\n\r\nconst SearchFoodItems = (props) => {\r\n\r\n    const { values, setValues } = props;\r\n\r\n    let orderedFoodItems = values.orderDetails;\r\n\r\n    const classes = useStyles();\r\n    const [searchList, setSearchList] = useState([]);\r\n    const [searchKey, setSearchKey] = useState('');\r\n\r\n    const [foodItems, setFoodItems] = useState([]);\r\n    useEffect(() => {\r\n        createAPIEndpoint(ENDPOINTS.FOODITEM).fetchAll()\r\n        .then(res => {\r\n            setFoodItems(res.data);\r\n            setSearchList(res.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let x = [...foodItems];\r\n        x = x.filter(y => {\r\n            return y.foodItemName.toLowerCase().includes(searchKey.toLocaleLowerCase())\r\n            && orderedFoodItems.every(item => item.foodItemId != y.foodItemId)\r\n        });\r\n        setSearchList(x);\r\n    }, [searchKey, orderedFoodItems]);\r\n\r\n    // config value\r\n    const addFoodItem = foodItem => {\r\n        let x = {\r\n            orderId: values.orderId,\r\n            orderDetailId: 0,\r\n            foodItemId: foodItem.foodItemId,\r\n            quantityItem: 1,\r\n            foodItemPrice: foodItem.foodItemPrice,\r\n            foodItemName: foodItem.foodItemName\r\n        };\r\n        setValues({\r\n            ...values,\r\n            orderDetails: [...values.orderDetails, x]\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Paper className={classes.searchPaper}>\r\n            <InputBase \r\n            className={classes.searchInput}\r\n            value={searchKey}\r\n            onChange={e=>setSearchKey(e.target.value)}\r\n            placeholder=\"Search food items\" />\r\n            <IconButton>\r\n                <SearchTwoToneIcon />\r\n            </IconButton>\r\n        </Paper>\r\n        <List className={classes.listRoot}>\r\n            {\r\n                searchList.map((item, idx) => (\r\n                    <ListItem\r\n                    key={idx}\r\n                    onClick={e => addFoodItem(item)}>\r\n                        <ListItemText\r\n                        primary={item.foodItemName}\r\n                        secondary={item.foodItemPrice+' VND'}>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton onClick={e => addFoodItem(item)}>\r\n                                <PlusOneIcon />\r\n                                <ArrowForwardIosIcon />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                ))\r\n            }\r\n        </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchFoodItems;","import { Grid } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useForm from '../../hooks/useForm';\r\nimport OrderedFoodItem from './OrderedFoodItem';\r\nimport OrderForm from './OrderForm';\r\nimport SearchFoodItems from './SearchFoodItems';\r\n\r\nconst generateOrderNumber = () => Math.floor(100000 + Math.random() * 900000).toString();\r\n\r\nconst getFreshModelObject = () => ({\r\n    orderId: 0,\r\n    orderNumber: generateOrderNumber(),\r\n    customerId: 0,\r\n    pMethod: 'none',\r\n    gTotal: 0,\r\n    deletedOrderItemIds: '',\r\n    orderDetails: []\r\n});\r\n\r\nconst Order = () => {\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetFormControls\r\n    } = useForm(getFreshModelObject());\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <OrderForm \r\n                    { ...{\r\n                        values, \r\n                        setValues,\r\n                        errors, \r\n                        setErrors,\r\n                        handleInputChange,\r\n                        resetFormControls\r\n                    } }\r\n                />\r\n            </Grid>\r\n        \r\n            <Grid item xs={6}>\r\n                <SearchFoodItems \r\n                    {...{\r\n                        values,\r\n                        setValues\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <OrderedFoodItem \r\n                    {...{\r\n                        values,\r\n                        setValues\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    );\r\n};\r\n\r\nexport default Order;","import logo from './logo.svg';\nimport './App.css';\nimport { Container, Typography } from \"@material-ui/core\";\nimport Order from './components/Order';\n\nfunction App() {\n  return (\n    <Container maxWidth=\"md\">\n      <Typography\n      gutterBottom\n      variant=\"h2\"\n      align=\"center\"\n      >Restaurant App</Typography>\n      <Order/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}